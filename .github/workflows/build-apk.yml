name: Build and Release APK

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.2'
        channel: 'stable'

    - name: Get dependencies
      run: flutter pub get

    - name: Build APK (unsigned)
      run: flutter build apk --release

    - name: Build App Bundle (unsigned)
      run: flutter build appbundle --release

    - name: Sign APK
      if: startsWith(github.ref, 'refs/tags/v')
      uses: r0adkll/sign-android-release@v1
      id: sign_apk
      with:
        releaseDirectory: build/app/outputs/flutter-apk
        signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
        alias: ${{ secrets.ANDROID_KEY_ALIAS }}
        keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
      env:
        BUILD_TOOLS_VERSION: "34.0.0"

    - name: Sign App Bundle
      if: startsWith(github.ref, 'refs/tags/v')
      uses: r0adkll/sign-android-release@v1
      id: sign_bundle
      with:
        releaseDirectory: build/app/outputs/bundle/release
        signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
        alias: ${{ secrets.ANDROID_KEY_ALIAS }}
        keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
      env:
        BUILD_TOOLS_VERSION: "34.0.0"

    - name: Upload APK as artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-release
        path: |
          build/app/outputs/flutter-apk/app-release.apk
          ${{ steps.sign_apk.outputs.signedReleaseFile }}

    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: ncipollo/release-action@v1
      with:
        artifacts: |
          ${{ steps.sign_apk.outputs.signedReleaseFile }}
          ${{ steps.sign_bundle.outputs.signedReleaseFile }}
        bodyFile: RELEASE_NOTES.md
        token: ${{ secrets.GITHUB_TOKEN }}

    # - name: Upload to Play Store
    #   if: startsWith(github.ref, 'refs/tags/v') && success()
    #   uses: r0adkll/upload-google-play@v1
    #   with:
    #     serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
    #     packageName: com.example.fluttery_mate
    #     releaseFiles: ${{ steps.sign_bundle.outputs.signedReleaseFile }}
    #     track: internal
    #     status: completed
    #     whatsNewDirectory: whatsnew
    #   continue-on-error: true
